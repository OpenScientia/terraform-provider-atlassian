name: Test

on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'
      - 'docs/*'
  push:
    branches: [main]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'
      - 'docs/*'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy: 
       matrix:
        go-version: [ '1.18', '1.17' ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
      
      - name: Generate
        run: |
         cd tools && go install github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs && cd ..
         tfplugindocs generate
      
      - name: Confirm no diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo "*** Unexpected differences after code generation. Run 'make generate' and commit."; exit 1)

      - name: Build
        run: make build

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: 'Acc. Tests (OS: ${{ matrix.os }} / TF: ${{ matrix.terraform }})'
    needs: build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: 
          - macos-latest
          - windows-latest
          - ubuntu-latest
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Setup Terraform ${{ matrix.terraform }}
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: Run Acceptance Tests
        env:
          ATLASSIAN_URL: '${{ secrets.TESTACC_URL }}'
          ATLASSIAN_USERNAME: '${{ secrets.TESTACC_USERNAME }}'
          ATLASSIAN_TOKEN: '${{ secrets.TESTACC_TOKEN }}'
        run: make testacc
